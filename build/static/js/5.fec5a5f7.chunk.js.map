{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","orderSerialNumber","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","serialNumber","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"oKAmCeA,EAhCD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,QAWX,OACA,yBAAKW,UAAWC,IAAQC,OACpB,2BAAG,2BAAG,4CAAkBlB,EAAMmB,qBAC9B,2BAAG,0CAAH,MAAyBb,GACzB,2BAAG,oCAAH,KAAiB,oCAAUc,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,GAAjD,KAAjB,O,wCCtBFC,E,kLAGEC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,U,+BAItD,IAAIC,EAAe,EACfC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATIN,KAAKzB,MAAMgC,UACXF,EAASL,KAAKzB,MAAM8B,OAAOvB,KAAI,SAAAR,GAAK,OACpC,kBAACmB,EAAD,CACIC,kBAAmBU,IACnBd,IAAKhB,EAAMkC,GACXhC,YAAaF,EAAME,YACnBqB,MAAOvB,EAAMuB,YAIjB,6BACCQ,O,GApBQI,aAyCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMrC,MAAM+B,OACpBE,QAASI,EAAMrC,MAAMiC,QACrBL,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAIA,SAAAU,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,QAI/DO,CAA6CK,YAAiBhB,EAAQiB,O,mBChDrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.fec5a5f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n            );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p><u><strong>S. No. - {props.orderSerialNumber}</strong></u></p>\r\n        <p><u>Ingredients</u>:  {ingredientOutput}</p>\r\n        <p><u>Price</u>: <strong> {Number.parseFloat(props.price).toFixed(2)} </strong> </p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let serialNumber = 1;\r\n        let orders = <Spinner />\r\n        if(!this.props.loading){\r\n            orders = this.props.orders.map(order => ( \r\n            <Order \r\n                orderSerialNumber={serialNumber++}\r\n                key={order.id}\r\n                ingredients={order.ingredients}\r\n                price={order.price} />\r\n                ))\r\n        }\r\n        return(\r\n            <div>\r\n            {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3VB30\"};"],"sourceRoot":""}